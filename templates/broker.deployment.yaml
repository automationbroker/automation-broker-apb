---

apiVersion: v1
{% if cluster == 'kubernetes' %}
kind: Deployment
{% else %}
kind: DeploymentConfig
{% endif %}
metadata:
  name: '{{ broker_name }}'
  namespace: '{{ broker_namespace }}'
  labels:
    app: '{{ broker_name }}'
    service: '{{ broker_name }}'
spec:
  replicas: 1
  selector:
    app: '{{ broker_name }}'
  strategy:
{% if cluster == 'kubernetes' %}
    type: RollingUpdate
{% else %}
    type: Rolling
{% endif %}
  template:
    metadata:
      labels:
        app: '{{ broker_name }}'
        service: '{{ broker_name }}'
    spec:
      serviceAccount: '{{ broker_name }}'
      containers:
      - image: '{{ broker_image }}'
        name: '{{ broker_name }}'
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - name: config-volume
            mountPath: /etc/ansible-service-broker
          - name: '{{ broker_name }}-tls'
            mountPath: /etc/tls/private
          - name: '{{ broker_name }}-auth-volume'
            mountPath: /var/run/asb-auth
        ports:
          - containerPort: 1338
            protocol: TCP
        env:
        - name: BROKER_CONFIG
          value: '{{ broker_config_path }}'
        resources: {}
        terminationMessagePath: /tmp/termination-log
        readinessProbe:
          httpGet:
            path: /healthz
            port: 1338
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            port: 1338
            path: /healthz
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 1
      volumes:
        - name: config-volume
          configMap:
            name: broker-config
            items:
            - key: broker-config
              path: config.yaml
        - name: '{{ broker_name }}-tls'
          secret:
            secretName: '{{ broker_name }}-tls'
        - name: '{{ broker_name }}-auth-volume'
          secret:
            secretName: '{{ broker_name }}-auth-secret'
