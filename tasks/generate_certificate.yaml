---

# TODO: Figure out how to use openssl from ansible
#- name: Generate a Self Signed OpenSSL certificate
#  openssl_certificate:
#    path: /tmp/{{ broker_name }}-cert/cert.pem
#    privatekey_path: /tmp/{{ broker_name }}-cert/key.pem
#    subject: "/CN={{ broker_name }}.{{ broker_name }}.svc"
#    provider: selfsigned
- name: Create OpenSSL Cert for Broker in k8s
  when: cluster == 'kubernetes'
  block:
    - name: Create directory for cert
      file:
        path: /tmp/{{ broker_name }}-cert
        state: directory
    - name: Create cert
      command: >
        openssl req -nodes -x509 -newkey rsa:4096
        -keyout /tmp/{{ broker_name }}-cert/key.pem
        -out /tmp/{{ broker_name }}-cert/cert.pem
        -days 365
        -subj "/CN={{ broker_name }}.{{ broker_name }}.svc"
    - name: Create tls secret
      command: >
        kubectl create secret tls -n {{ broker_namespace }} {{ broker_name }}-tls
        --cert="/tmp/{{ broker_name }}-cert/cert.pem"
        --key="/tmp/{{ broker_name }}-cert/key.pem"
      register: tls_command
      failed_when: tls_command.rc != 0 and 'AlreadyExists' not in tls_command.stderr
    - name: Register certificate related facts for broker
      set_fact:
        broker_ca_crt: "{{ lookup('file', '/tmp/' + broker_name + '-cert/cert.pem') | b64encode }}"

- name: Get CA for Broker
  when: cluster == 'openshift'
  block:
    - name: Get the cluster ca
      shell: >
        kubectl get secrets -n {{ broker_namespace }} {{ broker_name }}-client
        -o yaml | grep service-ca.crt | awk '{ print $2 }'
      register: cluster_ca
    - name: Register certificate related facts for broker
      set_fact:
        broker_ca_crt: "{{ cluster_ca.stdout }}"

- name: Set broker_client_secret fact
  set_fact:
    broker_client_secret: "{{
      lookup(
        'k8s',
        kind='ServiceAccount',
        namespace=broker_namespace,
        resource_name=broker_name + '-client'
      ) | to_json | from_json | json_query(query) | first
    }}"
  vars:
    query: "secrets[?starts_with(name, '{{ broker_name }}-client-token')].name"
