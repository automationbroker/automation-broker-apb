---

# TODO: Figure out how to use openssl from ansible
#- name: Generate a Self Signed OpenSSL certificate
#  openssl_certificate:
#    path: /tmp/{{ broker_name }}-cert/cert.pem
#    privatekey_path: /tmp/{{ broker_name }}-cert/key.pem
#    subject: "/CN={{ broker_name }}.{{ broker_name }}.svc"
#    provider: selfsigned
- name: 'Create OpenSSL Cert for Broker'
  block:
    - file:
        path: /tmp/{{ broker_name }}-cert
        state: directory
    - command: >
        openssl req -nodes -x509 -newkey rsa:4096
        -keyout /tmp/{{ broker_name }}-cert/key.pem
        -out /tmp/{{ broker_name }}-cert/cert.pem
        -days 365
        -subj "/CN={{ broker_name }}.{{ broker_name }}.svc"
    - command: >
        kubectl create secret tls -n {{ broker_namespace }} {{ broker_name }}-tls
        --cert="/tmp/{{ broker_name }}-cert/cert.pem"
        --key="/tmp/{{ broker_name }}-cert/key.pem"
      register: tls_command
      failed_when: tls_command.rc != 0 and 'AlreadyExists' not in tls_command.stderr
    - set_fact:
        broker_ca_crt: "{{ lookup('file', '/tmp/' + broker_name + '-cert/cert.pem') | b64encode }}"
        broker_client_secret: "{{
          lookup(
            'k8s',
            kind='ServiceAccount',
            namespace=broker_namespace,
            resource_name=broker_name + '-client'
            ) | json_query('secrets') | first | json_query('name')
        }}"
  when: cluster == 'kubernetes'

- name: 'Get CA for Broker'
  block:
    - shell: >
        kubectl get secrets -n {{ broker_namespace }} {{ broker_name }}-client
        -o yaml | grep service-ca.crt | awk '{ print $2 }'
      register: cluster_ca
    - set_fact:
        broker_ca_crt: "{{ cluster_ca.stdout }}"
        broker_client_secret: "{{ broker_name }}-client"
  when: cluster == 'openshift'
